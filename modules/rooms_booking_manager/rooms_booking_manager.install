<?php

/**
 * @file
 * Install for Rooms Booking Manager module
 */

/**
 * Implements hook_install().
 */
function rooms_booking_manager_install() {
  user_role_grant_permissions(1, array('book units'));
  user_role_grant_permissions(2, array('book units'));

  variable_set('rooms_unit_type_selector', array());
}

/**
 * Implements hook_enable().
 *
 * Creates a product that can be referenced from line items.
 */
function rooms_booking_manager_enable() {
  // Reset product types cache to have our rooms_product available.
  commerce_product_types_reset();
  commerce_product_configure_product_type('rooms_product');

  $types = commerce_product_types();
  if (isset($types['rooms_product']) && !empty($types['rooms_product'])) {
    $previous_product_id = variable_get('rooms_booking_manager_booking_product_id', 0);
    if (!($previous_product_id && commerce_product_load($previous_product_id))) {
      $product = commerce_product_new('rooms_product');
      $product->sku = 'ROOMS-BASIC-BOOKING';
      $product->title = t('Rooms Basic Booking');
      // We will change the price later, but for now set the price to 100 (=$1)
      // to give tax module something to work with.
      $product->commerce_price[LANGUAGE_NONE][0]['amount'] = 100;
      $product->commerce_price[LANGUAGE_NONE][0]['currency_code'] = commerce_default_currency();

      commerce_product_save($product);
      variable_set('rooms_booking_manager_booking_product_id', $product->product_id);
    }
  }
  else {
    drupal_set_message(t('There was an error creating the rooms product to handle bookings.'));
  }
}

/**
 * Implements hook_uninstall().
 */
function rooms_booking_manager_uninstall() {
  commerce_product_delete(variable_get('rooms_booking_manager_booking_product_id', 0));

  variable_del('rooms_date_format');
  variable_del('rooms_booking_manager_booking_product_id');
  variable_del('rooms_unit_type_selector');

  module_load_include('inc', 'rooms_booking_manager', 'rooms_booking_manager.variable');
  $vars = rooms_booking_manager_variable_info(array());

  foreach ($vars as $var_name => $var) {
    variable_del($var_name);
  }

  $vars = array(
    'rooms_booking_manager_deposit_enabled',
    'rooms_booking_manager_deposit_type',
    'rooms_booking_manager_deposit_fixed',
    'rooms_booking_manager_deposit_multiply',
  );

  foreach ($vars as $var_name => $var) {
    variable_del($var_name);
  }

  // Delete fields created by this module.
  field_delete_field('rooms_booking_options');
  field_delete_field('rooms_booking_number_people');
  field_delete_field('rooms_booking_options');
  field_delete_field('rooms_booking_reference');

  // Delete line item fields.
  module_load_include('inc', 'rooms_booking_manager', 'includes/rooms_booking_manager.fields');
  $field_data = _rooms_booking_manager_line_item_type_fields();
  foreach ($field_data['fields'] as $field_name => $field_info) {
    field_delete_field($field_name);
  }
  field_purge_batch(20);
}
